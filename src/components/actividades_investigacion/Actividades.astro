---
// CongressParticipationSection.astro
interface ParticipationOption {
  id: string;
  title: string;
  image: string;
  alt: string;
  link?: string;
}

const participationOptions: ParticipationOption[] = [
  {
    id: "research-projects",
    title: "Proyectos de Investigaci√≥n",
    image: "https://unev.edu.do/wp-content/uploads/2022/03/UNEV-Conmemora-el-di%CC%81a-Internacional-de-la-Mujer-con-Varias-Actividades-1.jpg",
    alt: "Vista a√©rea de investigaci√≥n ambiental"
  },
  {
    id: "research-groups",
    title: "Grupos de Investigaci√≥n",
    image: "https://unev.edu.do/wp-content/uploads/2025/06/DSC6697-3-1110x624.jpg",
    alt: "Equipo de investigadores profesionales"
  },
  {
    id: "laboratories",
    title: "Nuestros Laboratorios",
    image: "https://unev.edu.do/wp-content/uploads/2025/06/DSC5308-1110x624.jpg",
    alt: "Investigador trabajando en laboratorio"
  },
  {
    id: "donations",
    title: "DONUNEV (Donaciones UNEV)",
    image: "https://unev.edu.do/wp-content/uploads/2025/05/DSC4505-1110x624.jpg",
    alt: "Manos colaborando en equipo"
  }
];

import TopBar from "../TopBar/TopBar.astro"
import "./Actividades.css"

// ResearchStats.astro
interface StatItem {
  number: string;
  label: string;
  icon: string;
}

const stats: StatItem[] = [
  {
    number: "1902",
    label: "PUBLICACIONES",
    icon: "üìÑ"
  },
  {
    number: "36",
    label: "PERFILES",
    icon: "üë§"
  },
  {
    number: "75",
    label: "PROYECTOS",
    icon: "üìã"
  },
  {
    number: "23",
    label: "GRUPOS DE INVESTIGACI√ìN",
    icon: "üë•"
  },
  {
    number: "13",
    label: "PATENTES",
    icon: "üõ°Ô∏è"
  }
];
---

<div class="activities-container">
  <TopBar/>
  <section class="research-stats" id="research-stats-section">
    <div class="container">
      <div class="stats-header">
        <h2>Actividades de <span class="highlight">investigaci√≥n</span></h2>
        <button class="info-button" aria-label="M√°s informaci√≥n">
          M√ÅS INFORMACI√ìN
        </button>
      </div>
      
      <div class="stats-grid">
        {stats.map((stat) => (
          <div class="stat-item">
            <div class="stat-icon">{stat.icon}</div>
            <span class="stat-number" data-target={stat.number}>0</span>
            <p class="stat-label">{stat.label}</p>
          </div>
        ))}
      </div>
    </div>
  </section>
</div>

<section class="congress-participation">
  <!-- Banner del Congreso -->
  <div class="congress-banner">
    <div class="banner-content">
      <div class="congress-logo">
        <div class="logo-x">X</div>
      </div>
      <div class="congress-info">
        <h2 class="congress-title">
          CONGRESO ESTUDIANTIL DE<br>
          INVESTIGACI√ìN CIENT√çFICA<br>
          Y TECNOL√ìGICA
        </h2>
        <div class="congress-date">
          <span class="date-text">11 y 12 de septiembre de 2025</span>
          <span class="location">PUCMM, Campus de Santiago</span>
        </div>
      </div>
      <div class="banner-illustration">
        <div class="illustration-elements">
          <div class="rocket">üöÄ</div>
          <div class="bulb">üí°</div>
          <div class="atoms">‚öõÔ∏è</div>
          <div class="graph">üìä</div>
        </div>
        <div class="character-illustration">
          <div class="scientist-character"></div>
          <div class="students-working"></div>
        </div>
      </div>
    </div>
  </div>

  <!-- Secci√≥n de Participaci√≥n -->
  <div class="participation-section">
    <div class="participation-container">
      <div class="participation-text">
        <h3 class="participation-title">
          Puedes unirte o contribuir, <span class="highlight">t√∫ decides</span>.
        </h3>
        <p class="participation-description">
          Desde investigaciones innovadoras hasta laboratorios de vanguardia, 
          cada aporte impulsa el avance. Apoya nuestros proyectos, √∫nete a nuestros 
          grupos de investigaci√≥n o haz posible el futuro con tu donaci√≥n.
        </p>
        <div class="action-buttons">
          <button class="btn-primary">SER INVESTIGADOR</button>
          <button class="btn-secondary">DONAR</button>
        </div>
      </div>

      <div class="participation-grid">
        {participationOptions.map((option) => (
          <div class="participation-card" data-option={option.id}>
            <div class="card-image">
              <img 
                src={option.image} 
                alt={option.alt}
                loading="lazy"
              />
              <div class="card-overlay"></div>
            </div>
            <div class="card-title">
              <h4>{option.title}</h4>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>
</section>

<script>
  // Funci√≥n para animar n√∫meros
  function animateNumber(element, start, end, duration = 2000) {
    const startTime = performance.now();
    const startValue = parseInt(start);
    const endValue = parseInt(end);
    const difference = endValue - startValue;

    function updateNumber(currentTime) {
      const elapsed = currentTime - startTime;
      const progress = Math.min(elapsed / duration, 1);
      
      // Funci√≥n de easing para suavizar la animaci√≥n
      const easeOutCubic = 1 - Math.pow(1 - progress, 3);
      const currentValue = Math.floor(startValue + (difference * easeOutCubic));
      
      element.textContent = currentValue.toLocaleString();
      
      if (progress < 1) {
        requestAnimationFrame(updateNumber);
      } else {
        element.textContent = endValue.toLocaleString();
      }
    }
    
    requestAnimationFrame(updateNumber);
  }

  // Observer para detectar cuando la secci√≥n entra en el viewport
  function createStatsObserver() {
    const statsSection = document.getElementById('research-stats-section');
    const statNumbers = document.querySelectorAll('.stat-number');
    
    if (!statsSection || statNumbers.length === 0) return;

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          // Agregar clase para activar animaciones CSS si es necesario
          entry.target.classList.add('animate-stats');
          
          // Animar cada n√∫mero
          statNumbers.forEach((numberElement, index) => {
            const target = numberElement.getAttribute('data-target');
            if (target) {
              // Peque√±o delay entre cada n√∫mero para efecto escalonado
              setTimeout(() => {
                animateNumber(numberElement, 0, target, 2000);
              }, index * 200);
            }
          });
          
          // Desconectar el observer para que solo se ejecute una vez
          observer.unobserve(entry.target);
        }
      });
    }, {
      threshold: 0.3, // Se activa cuando el 30% de la secci√≥n es visible
      rootMargin: '-50px' // Margen adicional
    });

    observer.observe(statsSection);
  }

  // Inicializar cuando el DOM est√© cargado
  document.addEventListener('DOMContentLoaded', createStatsObserver);

  // Interactividad para las tarjetas de participaci√≥n
  document.querySelectorAll('.participation-card').forEach(card => {
    card.addEventListener('click', () => {
      const optionId = card.getAttribute('data-option');
      console.log(`Clicked on: ${optionId}`);
      // Aqu√≠ puedes agregar navegaci√≥n espec√≠fica
    });
  });

  // Interactividad para los botones
  document.querySelectorAll('.btn-primary, .btn-secondary').forEach(button => {
    button.addEventListener('click', (e) => {
      const buttonText = e.target.textContent;
      console.log(`Button clicked: ${buttonText}`);
      // Aqu√≠ puedes agregar la l√≥gica correspondiente
    });
  });
</script>